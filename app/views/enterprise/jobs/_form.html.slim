- if job.errors.any?
  = render partial: 'shared/errors', locals: { model: job }

= form_for render_scaffold_form_path(job), remote: remote, html: { class: 'ui form' } do |f|
  h3.ui.header = Job.human_attribute_name(:name)
  .fields
    .field
      = render_job_text_field(f, :name)

    .field.inline
      = f.select :company_id, current_enterprise.companies.map {|c| [c.name, c.id]},
        {}, class: 'ui dropdown company-field'
      = link_to t('.new_company'), new_zhao_company_path, remote: true,
        class: "ui button"

    .field.inline
      = f.select :contact_id, current_enterprise.contacts.map {|c| [c.name, c.id]},
        {}, class: 'ui dropdown contact-field'
      = link_to t('.new_contact'), new_zhao_contact_path, remote: true,
        class: "ui button"

  .fields
    .field
      .ui.action.input.labeled
        .ui.basic.label
          = Job.human_attribute_name(:wage)
        = render_job_text_field(f, :wage)
        = f.select :unit, Job.unit.options {|u| [u.first, u.last]}, {},
          class: 'ui compact selection dropdown'

    .field
      .ui.labeled.input
        = f.label :worktime, class: "ui label basic"
        = render_job_text_field(f, :worktime)

    .field
      .ui.labeled.input
        = f.label :royalty, class: "ui label basic"
        = render_job_text_field(f, :royalty)

    .field
      .ui.labeled.input
        = f.label :bonus, class: "ui label basic"
        = render_job_text_field(f, :bonus)

  h3.ui.header 性别要求
  .fields
    = f.fields_for :job_quantity_attributes, @job.job_quantity do |jq|
      .field
        .ui.labeled.input
          = jq.label :wish_male_count, '男', class: "ui label basic"
          = jq.text_field :wish_male_count, placeholder: '男员工人数'
      .field
        .ui.labeled.input
          = jq.label :wish_female_count, '女', class: "ui label basic"
          = jq.text_field :wish_female_count, placeholder: '女员工人数'
      .field
        .ui.labeled.input
          .ui.label.basic
            => check_box_tag :wish_unkown_count
            = jq.label :wish_unkown_count, '不限'
          = jq.text_field :wish_unkown_count, placeholder: '不论男女共招多少人'


  h3.ui.header = Job.human_attribute_name(:channel)
  .fields
    .field
      = f.select :channel, Job.channel.options {|c| [c.first, c.last]}, {},
        class: "ui dropdown"

    .field
      .ui.action.input.labeled
        .ui.basic.label = Job.human_attribute_name(:wageday)
        = f.text_field :wageday, placeholder: t('.holder.wageday'), title: t('.popup.wageday'),
          class: "popmessage"
        = f.select :wageday_unit, Job.wageday_unit.options {|u| [u.first, u.last]}, {},
          class: 'ui compact selection dropdown'

    .field
      .ui.labeled.input
        .ui.label.basic
          => check_box_tag :isAdvance
          = Job.human_attribute_name(:advance)
        = render_job_text_field(f, :advance)

  h3.ui.header 佣金
  .field
    .ui.buttons.commission
      a.ui.button.first.teal 按月返利/管理费
      a.ui.button.second 按时返利/外包红利
      a.ui.button.third 按天返利/招聘费

  #job_commission_people
    = f.fields_for :job_commission_people do |jc|
      = render 'job_commission_person_fields', f: jc

    = link_to_add_association f, :job_commission_people do
      i.add.circle.icon.green.big


  .field
    = f.submit class: "ui positive button"
    = render_scaffold_jobs_path
